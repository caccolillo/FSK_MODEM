

================================================================
== Vitis HLS Report for 'applyIIRFilter'
================================================================
* Date:           Sun Jun 29 20:35:18 2025

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        filter_envelope_detector
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a100t-csg324-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.026 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       29|       29|  0.290 us|  0.290 us|   30|   30|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_16_1  |       27|       27|         8|          4|          1|     6|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 4, D = 8, States = { 1 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.38>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%x = alloca i32 1"   --->   Operation 11 'alloca' 'x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 12 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%spectopmodule_ln14 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [filter_envelope_detector.c:14]   --->   Operation 14 'spectopmodule' 'spectopmodule_ln14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input_r_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %input_r" [filter_envelope_detector.c:14]   --->   Operation 17 'read' 'input_r_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.61ns)   --->   "%store_ln16 = store i4 0, i4 %i" [filter_envelope_detector.c:16]   --->   Operation 18 'store' 'store_ln16' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 19 [1/1] (1.61ns)   --->   "%store_ln16 = store i32 %input_r_read, i32 %x" [filter_envelope_detector.c:16]   --->   Operation 19 'store' 'store_ln16' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln16 = br void %for.inc" [filter_envelope_detector.c:16]   --->   Operation 20 'br' 'br_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [filter_envelope_detector.c:16]   --->   Operation 21 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 22 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.44ns)   --->   "%icmp_ln16 = icmp_ult  i4 %i_1, i4 11" [filter_envelope_detector.c:16]   --->   Operation 23 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 6, i64 6, i64 6"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln16 = br i1 %icmp_ln16, void %for.end, void %for.inc.split" [filter_envelope_detector.c:16]   --->   Operation 25 'br' 'br_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%i_cast1 = zext i4 %i_1" [filter_envelope_detector.c:16]   --->   Operation 26 'zext' 'i_cast1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%NUM_1_0_addr = getelementptr i23 %NUM_1_0, i64 0, i64 %i_cast1" [filter_envelope_detector.c:18]   --->   Operation 27 'getelementptr' 'NUM_1_0_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 28 [2/2] (2.15ns)   --->   "%NUM_1_0_load = load i4 %NUM_1_0_addr" [filter_envelope_detector.c:18]   --->   Operation 28 'load' 'NUM_1_0_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 23> <Depth = 11> <ROM>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%or_ln21 = or i4 %i_1, i4 1" [filter_envelope_detector.c:21]   --->   Operation 29 'or' 'or_ln21' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i4 %or_ln21" [filter_envelope_detector.c:21]   --->   Operation 30 'zext' 'zext_ln21' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %or_ln21, i1 0" [filter_envelope_detector.c:22]   --->   Operation 31 'bitconcatenate' 'tmp' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i5 %tmp" [filter_envelope_detector.c:22]   --->   Operation 32 'zext' 'zext_ln22' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%delay_addr = getelementptr i32 %delay, i64 0, i64 %zext_ln22" [filter_envelope_detector.c:22]   --->   Operation 33 'getelementptr' 'delay_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%or_ln23 = or i5 %tmp, i5 1" [filter_envelope_detector.c:23]   --->   Operation 34 'or' 'or_ln23' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i5 %or_ln23" [filter_envelope_detector.c:23]   --->   Operation 35 'zext' 'zext_ln23' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%delay_addr_1 = getelementptr i32 %delay, i64 0, i64 %zext_ln23" [filter_envelope_detector.c:23]   --->   Operation 36 'getelementptr' 'delay_addr_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 37 [2/2] (2.15ns)   --->   "%delay_load = load i5 %delay_addr" [filter_envelope_detector.c:22]   --->   Operation 37 'load' 'delay_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 22> <RAM>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%NUM_1_1_addr = getelementptr i2 %NUM_1_1, i64 0, i64 %zext_ln21" [filter_envelope_detector.c:22]   --->   Operation 38 'getelementptr' 'NUM_1_1_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (2.15ns)   --->   "%NUM_1_1_load = load i4 %NUM_1_1_addr" [filter_envelope_detector.c:22]   --->   Operation 39 'load' 'NUM_1_1_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 2> <Depth = 11> <ROM>
ST_1 : Operation 40 [2/2] (2.15ns)   --->   "%delay_load_1 = load i5 %delay_addr_1" [filter_envelope_detector.c:23]   --->   Operation 40 'load' 'delay_load_1' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 22> <RAM>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%NUM_1_2_addr = getelementptr i2 %NUM_1_2, i64 0, i64 %zext_ln21" [filter_envelope_detector.c:23]   --->   Operation 41 'getelementptr' 'NUM_1_2_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 42 [2/2] (2.15ns)   --->   "%NUM_1_2_load = load i4 %NUM_1_2_addr" [filter_envelope_detector.c:23]   --->   Operation 42 'load' 'NUM_1_2_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 2> <Depth = 11> <ROM>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%DEN_1_1_addr = getelementptr i32 %DEN_1_1, i64 0, i64 %zext_ln21" [filter_envelope_detector.c:24]   --->   Operation 43 'getelementptr' 'DEN_1_1_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 44 [2/2] (2.15ns)   --->   "%DEN_1_1_load = load i4 %DEN_1_1_addr" [filter_envelope_detector.c:24]   --->   Operation 44 'load' 'DEN_1_1_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 11> <ROM>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%DEN_1_2_addr = getelementptr i30 %DEN_1_2, i64 0, i64 %zext_ln21" [filter_envelope_detector.c:25]   --->   Operation 45 'getelementptr' 'DEN_1_2_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 46 [2/2] (2.15ns)   --->   "%DEN_1_2_load = load i4 %DEN_1_2_addr" [filter_envelope_detector.c:25]   --->   Operation 46 'load' 'DEN_1_2_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 30> <Depth = 11> <ROM>
ST_1 : Operation 47 [1/1] (1.77ns)   --->   "%add_ln16 = add i4 %i_1, i4 2" [filter_envelope_detector.c:16]   --->   Operation 47 'add' 'add_ln16' <Predicate = (icmp_ln16)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (1.61ns)   --->   "%store_ln16 = store i4 %add_ln16, i4 %i" [filter_envelope_detector.c:16]   --->   Operation 48 'store' 'store_ln16' <Predicate = (icmp_ln16)> <Delay = 1.61>

State 2 <SV = 1> <Delay = 4.30>
ST_2 : Operation 49 [1/2] (2.15ns)   --->   "%NUM_1_0_load = load i4 %NUM_1_0_addr" [filter_envelope_detector.c:18]   --->   Operation 49 'load' 'NUM_1_0_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 23> <Depth = 11> <ROM>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%NUM_1_0_addr_1 = getelementptr i23 %NUM_1_0, i64 0, i64 %zext_ln21" [filter_envelope_detector.c:21]   --->   Operation 50 'getelementptr' 'NUM_1_0_addr_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 51 [2/2] (2.15ns)   --->   "%NUM_1_0_load_1 = load i4 %NUM_1_0_addr_1" [filter_envelope_detector.c:21]   --->   Operation 51 'load' 'NUM_1_0_load_1' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 23> <Depth = 11> <ROM>
ST_2 : Operation 52 [1/2] (2.15ns)   --->   "%delay_load = load i5 %delay_addr" [filter_envelope_detector.c:22]   --->   Operation 52 'load' 'delay_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 22> <RAM>
ST_2 : Operation 53 [1/2] (2.15ns)   --->   "%NUM_1_1_load = load i4 %NUM_1_1_addr" [filter_envelope_detector.c:22]   --->   Operation 53 'load' 'NUM_1_1_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 2> <Depth = 11> <ROM>
ST_2 : Operation 54 [1/2] (2.15ns)   --->   "%delay_load_1 = load i5 %delay_addr_1" [filter_envelope_detector.c:23]   --->   Operation 54 'load' 'delay_load_1' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 22> <RAM>
ST_2 : Operation 55 [1/2] (2.15ns)   --->   "%NUM_1_2_load = load i4 %NUM_1_2_addr" [filter_envelope_detector.c:23]   --->   Operation 55 'load' 'NUM_1_2_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 2> <Depth = 11> <ROM>
ST_2 : Operation 56 [1/2] (2.15ns)   --->   "%DEN_1_1_load = load i4 %DEN_1_1_addr" [filter_envelope_detector.c:24]   --->   Operation 56 'load' 'DEN_1_1_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 11> <ROM>
ST_2 : Operation 57 [1/2] (2.15ns)   --->   "%DEN_1_2_load = load i4 %DEN_1_2_addr" [filter_envelope_detector.c:25]   --->   Operation 57 'load' 'DEN_1_2_load' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 30> <Depth = 11> <ROM>
ST_2 : Operation 58 [1/1] (2.15ns)   --->   "%store_ln30 = store i32 %delay_load, i5 %delay_addr_1" [filter_envelope_detector.c:30]   --->   Operation 58 'store' 'store_ln30' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 22> <RAM>

State 3 <SV = 2> <Delay = 6.86>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%x_load = load i32 %x" [filter_envelope_detector.c:18]   --->   Operation 59 'load' 'x_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%sext_ln18 = sext i32 %x_load" [filter_envelope_detector.c:18]   --->   Operation 60 'sext' 'sext_ln18' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%sext_ln18_1 = sext i23 %NUM_1_0_load" [filter_envelope_detector.c:18]   --->   Operation 61 'sext' 'sext_ln18_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i31 %sext_ln18_1" [filter_envelope_detector.c:18]   --->   Operation 62 'zext' 'zext_ln18' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 63 [2/2] (6.86ns)   --->   "%mul_ln18 = mul i63 %zext_ln18, i63 %sext_ln18" [filter_envelope_detector.c:18]   --->   Operation 63 'mul' 'mul_ln18' <Predicate = (icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/2] (2.15ns)   --->   "%NUM_1_0_load_1 = load i4 %NUM_1_0_addr_1" [filter_envelope_detector.c:21]   --->   Operation 64 'load' 'NUM_1_0_load_1' <Predicate = (icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 23> <Depth = 11> <ROM>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln22 = sext i32 %delay_load" [filter_envelope_detector.c:22]   --->   Operation 65 'sext' 'sext_ln22' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%sext_ln22_1 = sext i2 %NUM_1_1_load" [filter_envelope_detector.c:22]   --->   Operation 66 'sext' 'sext_ln22_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln22_1 = zext i31 %sext_ln22_1" [filter_envelope_detector.c:22]   --->   Operation 67 'zext' 'zext_ln22_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 68 [2/2] (6.86ns)   --->   "%mul_ln22 = mul i63 %zext_ln22_1, i63 %sext_ln22" [filter_envelope_detector.c:22]   --->   Operation 68 'mul' 'mul_ln22' <Predicate = (icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.86>
ST_4 : Operation 69 [1/2] (6.86ns)   --->   "%mul_ln18 = mul i63 %zext_ln18, i63 %sext_ln18" [filter_envelope_detector.c:18]   --->   Operation 69 'mul' 'mul_ln18' <Predicate = (icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%y = partselect i32 @_ssdm_op_PartSelect.i32.i63.i32.i32, i63 %mul_ln18, i32 31, i32 62" [filter_envelope_detector.c:18]   --->   Operation 70 'partselect' 'y' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 71 [1/2] (6.86ns)   --->   "%mul_ln22 = mul i63 %zext_ln22_1, i63 %sext_ln22" [filter_envelope_detector.c:22]   --->   Operation 71 'mul' 'mul_ln22' <Predicate = (icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln23 = sext i32 %delay_load_1" [filter_envelope_detector.c:23]   --->   Operation 72 'sext' 'sext_ln23' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%sext_ln23_1 = sext i2 %NUM_1_2_load" [filter_envelope_detector.c:23]   --->   Operation 73 'sext' 'sext_ln23_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln23_1 = zext i31 %sext_ln23_1" [filter_envelope_detector.c:23]   --->   Operation 74 'zext' 'zext_ln23_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 75 [2/2] (6.86ns)   --->   "%mul_ln23 = mul i63 %zext_ln23_1, i63 %sext_ln23" [filter_envelope_detector.c:23]   --->   Operation 75 'mul' 'mul_ln23' <Predicate = (icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i32 %DEN_1_1_load" [filter_envelope_detector.c:24]   --->   Operation 76 'sext' 'sext_ln24' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 77 [2/2] (6.86ns)   --->   "%mul_ln24 = mul i63 %sext_ln24, i63 %sext_ln22" [filter_envelope_detector.c:24]   --->   Operation 77 'mul' 'mul_ln24' <Predicate = (icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%x_load_1 = load i32 %x" [filter_envelope_detector.c:35]   --->   Operation 98 'load' 'x_load_1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%ret_ln35 = ret i32 %x_load_1" [filter_envelope_detector.c:35]   --->   Operation 99 'ret' 'ret_ln35' <Predicate = (!icmp_ln16)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.86>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%sext_ln21 = sext i32 %y" [filter_envelope_detector.c:21]   --->   Operation 78 'sext' 'sext_ln21' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln21_1 = sext i23 %NUM_1_0_load_1" [filter_envelope_detector.c:21]   --->   Operation 79 'sext' 'sext_ln21_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln21_1 = zext i31 %sext_ln21_1" [filter_envelope_detector.c:21]   --->   Operation 80 'zext' 'zext_ln21_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [2/2] (6.86ns)   --->   "%mul_ln21 = mul i63 %sext_ln21, i63 %zext_ln21_1" [filter_envelope_detector.c:21]   --->   Operation 81 'mul' 'mul_ln21' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/2] (6.86ns)   --->   "%mul_ln23 = mul i63 %zext_ln23_1, i63 %sext_ln23" [filter_envelope_detector.c:23]   --->   Operation 82 'mul' 'mul_ln23' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/2] (6.86ns)   --->   "%mul_ln24 = mul i63 %sext_ln24, i63 %sext_ln22" [filter_envelope_detector.c:24]   --->   Operation 83 'mul' 'mul_ln24' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%sext_ln25 = sext i30 %DEN_1_2_load" [filter_envelope_detector.c:25]   --->   Operation 84 'sext' 'sext_ln25' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i31 %sext_ln25" [filter_envelope_detector.c:25]   --->   Operation 85 'zext' 'zext_ln25' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [2/2] (6.86ns)   --->   "%mul_ln25 = mul i63 %zext_ln25, i63 %sext_ln23" [filter_envelope_detector.c:25]   --->   Operation 86 'mul' 'mul_ln25' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.86>
ST_6 : Operation 87 [1/2] (6.86ns)   --->   "%mul_ln21 = mul i63 %sext_ln21, i63 %zext_ln21_1" [filter_envelope_detector.c:21]   --->   Operation 87 'mul' 'mul_ln21' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/2] (6.86ns)   --->   "%mul_ln25 = mul i63 %zext_ln25, i63 %sext_ln23" [filter_envelope_detector.c:25]   --->   Operation 88 'mul' 'mul_ln25' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln23 = add i63 %mul_ln22, i63 %mul_ln23" [filter_envelope_detector.c:23]   --->   Operation 89 'add' 'add_ln23' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 90 [1/1] (5.41ns) (root node of TernaryAdder)   --->   "%newFirst = sub i63 %add_ln23, i63 %mul_ln24" [filter_envelope_detector.c:23]   --->   Operation 90 'sub' 'newFirst' <Predicate = true> <Delay = 5.41> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 7.02>
ST_7 : Operation 91 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%newFirst4 = sub i63 %mul_ln21, i63 %mul_ln25" [filter_envelope_detector.c:21]   --->   Operation 91 'sub' 'newFirst4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 92 [1/1] (5.41ns) (root node of TernaryAdder)   --->   "%acc = add i63 %newFirst, i63 %newFirst4" [filter_envelope_detector.c:23]   --->   Operation 92 'add' 'acc' <Predicate = true> <Delay = 5.41> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%output = partselect i32 @_ssdm_op_PartSelect.i32.i63.i32.i32, i63 %acc, i32 31, i32 62" [filter_envelope_detector.c:27]   --->   Operation 93 'partselect' 'output' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (1.61ns)   --->   "%store_ln16 = store i32 %output, i32 %x" [filter_envelope_detector.c:16]   --->   Operation 94 'store' 'store_ln16' <Predicate = true> <Delay = 1.61>

State 8 <SV = 7> <Delay = 2.15>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%specloopname_ln15 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [filter_envelope_detector.c:15]   --->   Operation 95 'specloopname' 'specloopname_ln15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (2.15ns)   --->   "%store_ln31 = store i32 %output, i5 %delay_addr" [filter_envelope_detector.c:31]   --->   Operation 96 'store' 'store_ln31' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 22> <RAM>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln16 = br void %for.inc" [filter_envelope_detector.c:16]   --->   Operation 97 'br' 'br_ln16' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.39ns
The critical path consists of the following:
	'alloca' operation ('i') [9]  (0 ns)
	'load' operation ('i', filter_envelope_detector.c:16) on local variable 'i' [19]  (0 ns)
	'add' operation ('add_ln16', filter_envelope_detector.c:16) [79]  (1.78 ns)
	'store' operation ('store_ln16', filter_envelope_detector.c:16) of variable 'add_ln16', filter_envelope_detector.c:16 on local variable 'i' [80]  (1.61 ns)

 <State 2>: 4.3ns
The critical path consists of the following:
	'load' operation ('delay_load', filter_envelope_detector.c:22) on array 'delay' [49]  (2.15 ns)
	'store' operation ('store_ln30', filter_envelope_detector.c:30) of variable 'delay_load', filter_envelope_detector.c:22 on array 'delay' [77]  (2.15 ns)

 <State 3>: 6.86ns
The critical path consists of the following:
	'load' operation ('x_load', filter_envelope_detector.c:18) on local variable 'x' [25]  (0 ns)
	'mul' operation ('mul_ln18', filter_envelope_detector.c:18) [33]  (6.86 ns)

 <State 4>: 6.86ns
The critical path consists of the following:
	'mul' operation ('mul_ln18', filter_envelope_detector.c:18) [33]  (6.86 ns)

 <State 5>: 6.86ns
The critical path consists of the following:
	'mul' operation ('mul_ln21', filter_envelope_detector.c:21) [48]  (6.86 ns)

 <State 6>: 6.86ns
The critical path consists of the following:
	'mul' operation ('mul_ln21', filter_envelope_detector.c:21) [48]  (6.86 ns)

 <State 7>: 7.03ns
The critical path consists of the following:
	'sub' operation ('newFirst4', filter_envelope_detector.c:21) [74]  (0 ns)
	'add' operation ('acc', filter_envelope_detector.c:23) [75]  (5.42 ns)
	'store' operation ('store_ln16', filter_envelope_detector.c:16) of variable 'output', filter_envelope_detector.c:27 on local variable 'x' [81]  (1.61 ns)

 <State 8>: 2.15ns
The critical path consists of the following:
	'store' operation ('store_ln31', filter_envelope_detector.c:31) of variable 'output', filter_envelope_detector.c:27 on array 'delay' [78]  (2.15 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
